{"ast":null,"code":"import _objectSpread from\"/Users/vitaliidolzhenko/WebstormProjects/mesto-vetal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/vitaliidolzhenko/WebstormProjects/mesto-vetal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/vitaliidolzhenko/WebstormProjects/mesto-vetal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var Api=/*#__PURE__*/function(){function Api(config){var _this=this;_classCallCheck(this,Api);this.getCardList=function(){return _this._fetch('GET','/cards');};this.getUserInfo=function(){return _this._fetch('GET','/users/me');};this.deleteLike=function(id){return _this._fetch('DELETE','/cards/likes/'+id);};this.putLike=function(id){return _this._fetch('PUT','/cards/likes/'+id);};this.changeLikeCardStatus=function(id,isLiked){return isLiked?_this.putLike(id):_this.deleteLike(id);};this.deleteCard=function(id){return _this._fetch('DELETE','/cards/'+id);};this.setUserInfo=function(name,about){return _this._fetch('PATCH','/users/me',{name:name,about:about});};this.setUserAvatar=function(link){return _this._fetch('PATCH','/users/me/avatar',{'avatar':link});};this.addNewCard=function(body){return _this._fetch('POST','/cards',body);};this.url=config.url;this.headers=config.headers;}_createClass(Api,[{key:\"_fetch\",value:function _fetch(method,path,body){var options={method:method,headers:this.headers};if((method==='PATCH'||method==='POST')&&body){options=_objectSpread(_objectSpread({},options),{},{body:JSON.stringify(body)});}return fetch(this.url+'cohort-25'+path,options).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}}]);return Api;}();var api=new Api({url:'https://mesto.nomoreparties.co/v1/',headers:{authorization:'6c5c2ad0-ab62-45ad-b6d9-d0d31ad5dd6b','Content-type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/vitaliidolzhenko/WebstormProjects/mesto-vetal/frontend/src/utils/api.js"],"names":["Api","config","getCardList","_fetch","getUserInfo","deleteLike","id","putLike","changeLikeCardStatus","isLiked","deleteCard","setUserInfo","name","about","setUserAvatar","link","addNewCard","body","url","headers","method","path","options","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","api","authorization"],"mappings":"yhBAAA,UAAaA,CAAAA,GAAb,yBACI,aAAYC,MAAZ,CAAoB,+CAMpBC,WANoB,CAMN,iBAAM,CAAA,KAAI,CAACC,MAAL,CAAY,KAAZ,CAAmB,QAAnB,CAAN,EANM,MAQpBC,WARoB,CAQN,iBAAM,CAAA,KAAI,CAACD,MAAL,CAAY,KAAZ,CAAmB,WAAnB,CAAN,EARM,MAUpBE,UAVoB,CAUP,SAACC,EAAD,QAAQ,CAAA,KAAI,CAACH,MAAL,CAAY,QAAZ,CAAsB,gBAAkBG,EAAxC,CAAR,EAVO,MAYpBC,OAZoB,CAYV,SAACD,EAAD,QAAQ,CAAA,KAAI,CAACH,MAAL,CAAY,KAAZ,CAAmB,gBAAkBG,EAArC,CAAR,EAZU,MAcpBE,oBAdoB,CAcG,SAACF,EAAD,CAAKG,OAAL,QAAiBA,CAAAA,OAAO,CAAG,KAAI,CAACF,OAAL,CAAaD,EAAb,CAAH,CAAsB,KAAI,CAACD,UAAL,CAAgBC,EAAhB,CAA9C,EAdH,MAgBpBI,UAhBoB,CAgBP,SAACJ,EAAD,QAAQ,CAAA,KAAI,CAACH,MAAL,CAAY,QAAZ,CAAsB,UAAYG,EAAlC,CAAR,EAhBO,MAkBpBK,WAlBoB,CAkBN,SAACC,IAAD,CAAOC,KAAP,QAAiB,CAAA,KAAI,CAACV,MAAL,CAAY,OAAZ,CAAqB,WAArB,CAAkC,CAACS,IAAI,CAAJA,IAAD,CAAOC,KAAK,CAALA,KAAP,CAAlC,CAAjB,EAlBM,MAoBpBC,aApBoB,CAoBJ,SAACC,IAAD,QAAU,CAAA,KAAI,CAACZ,MAAL,CAAY,OAAZ,CAAqB,kBAArB,CAAyC,CAAC,SAAUY,IAAX,CAAzC,CAAV,EApBI,MAsBpBC,UAtBoB,CAsBP,SAACC,IAAD,QAAU,CAAA,KAAI,CAACd,MAAL,CAAY,MAAZ,CAAoB,QAApB,CAA8Bc,IAA9B,CAAV,EAtBO,CAChB,KAAKC,GAAL,CAAWjB,MAAM,CAACiB,GAAlB,CACA,KAAKC,OAAL,CAAelB,MAAM,CAACkB,OAAtB,CACH,CAJL,sCA0BI,gBAAOC,MAAP,CAAeC,IAAf,CAAqBJ,IAArB,CAA2B,CACvB,GAAIK,CAAAA,OAAO,CAAG,CACVF,MAAM,CAANA,MADU,CAEVD,OAAO,CAAE,KAAKA,OAFJ,CAAd,CAIA,GAAI,CAACC,MAAM,GAAK,OAAX,EAAsBA,MAAM,GAAK,MAAlC,GAA6CH,IAAjD,CAAuD,CACnDK,OAAO,gCACAA,OADA,MAEHL,IAAI,CAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf,CAFH,EAAP,CAIH,CACD,MAAOQ,CAAAA,KAAK,CAAC,KAAKP,GAAL,CAAW,WAAX,CAAyBG,IAA1B,CAAgCC,OAAhC,CAAL,CACFI,IADE,CACG,SAAAC,GAAG,CAAI,CACT,GAAIA,GAAG,CAACC,EAAR,CAAY,CACR,MAAOD,CAAAA,GAAG,CAACE,IAAJ,EAAP,CACH,CACD,MAAOC,CAAAA,OAAO,CAACC,MAAR,iDAA0BJ,GAAG,CAACK,MAA9B,EAAP,CACH,CANE,CAAP,CAOH,CA5CL,mBA+CA,GAAMC,CAAAA,GAAG,CAAG,GAAIjC,CAAAA,GAAJ,CAAQ,CAChBkB,GAAG,CAAE,oCADW,CAEhBC,OAAO,CAAE,CACLe,aAAa,CAAE,sCADV,CAEL,eAAgB,kBAFX,CAFO,CAAR,CAAZ,CAOA,cAAeD,CAAAA,GAAf","sourcesContent":["export class Api {\n    constructor(config) {\n        this.url = config.url;\n        this.headers = config.headers;\n    }\n\n\n    getCardList = () => this._fetch('GET', '/cards');\n\n    getUserInfo = () => this._fetch('GET', '/users/me');\n\n    deleteLike = (id) => this._fetch('DELETE', '/cards/likes/' + id);\n\n    putLike = (id) => this._fetch('PUT', '/cards/likes/' + id);\n\n    changeLikeCardStatus = (id, isLiked) => isLiked ? this.putLike(id) : this.deleteLike(id);\n\n    deleteCard = (id) => this._fetch('DELETE', '/cards/' + id);\n\n    setUserInfo = (name, about) => this._fetch('PATCH', '/users/me', {name, about});\n\n    setUserAvatar = (link) => this._fetch('PATCH', '/users/me/avatar', {'avatar': link});\n\n    addNewCard = (body) => this._fetch('POST', '/cards', body);\n\n\n    _fetch(method, path, body) {\n        let options = {\n            method,\n            headers: this.headers,\n        };\n        if ((method === 'PATCH' || method === 'POST') && body) {\n            options = {\n                ...options,\n                body: JSON.stringify(body)\n            };\n        }\n        return fetch(this.url + 'cohort-25' + path, options)\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Ошибка: ${res.status}`);\n            });\n    }\n}\n\nconst api = new Api({\n    url: 'https://mesto.nomoreparties.co/v1/',\n    headers: {\n        authorization: '6c5c2ad0-ab62-45ad-b6d9-d0d31ad5dd6b',\n        'Content-type': 'application/json'\n    }\n});\nexport default api;\n\n\n"]},"metadata":{},"sourceType":"module"}