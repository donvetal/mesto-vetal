{"ast":null,"code":"// export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const BASE_URL = 'https://api.vitaliymont.students.nomoredomains.club';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    credentials: \"include\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    return response.json();\n  }).then(res => {\n    return res;\n  });\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    credentials: \"include\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }); // .then(res => res.json())\n  // .then((data) => {\n  //\n  //     if (data.token) {\n  //         return data;\n  //     }\n  // });\n};\nexport const logout = () => {\n  return fetch(`${BASE_URL}/logout`, {\n    method: 'GET',\n    credentials: 'include'\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const checkToken = () => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    credentials: \"include\",\n    headers: {\n      \"Content-Type\": \"application/json\" // \"Authorization\": `Bearer ${token}`\n\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n}; // export const checkToken = () => {\n//     return fetch(`${BASE_URL}/users/me`, {\n//         method: 'GET',\n//         credentials: \"include\",\n//         headers: {\n//             \"Content-Type\": \"application/json\",\n//             // \"Authorization\": `Bearer ${token}`\n//\n//         }\n//     })\n//         .then(res => res.json())\n//         .then(data => data);\n// };","map":{"version":3,"sources":["/Users/vitaliidolzhenko/WebstormProjects/mesto-vetal/frontend/src/utils/auth.js"],"names":["BASE_URL","register","password","email","fetch","method","credentials","headers","body","JSON","stringify","then","response","json","res","authorize","ok","Promise","reject","status","logout","checkToken"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG,qDAAjB;AAGP,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACzC,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,WAAW,EAAE,SAFkB;AAG/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAHsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AANyB,GAAvB,CAAL,CAQFQ,IARE,CAQIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFF,IAXE,CAWIG,GAAD,IAAS;AACX,WAAOA,GAAP;AACH,GAbE,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAMC,SAAS,GAAG,CAACb,QAAD,EAAWC,KAAX,KAAqB;AAC1C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,WAAW,EAAE,SAFkB;AAG/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAHsB;AAM/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACR,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AANyB,GAAvB,CAAL,CAQFQ,IARE,CAQGG,GAAG,IAAI;AACT,QAAIA,GAAG,CAACE,EAAR,EAAY;AACR,aAAOF,GAAG,CAACD,IAAJ,EAAP;AACH;;AACD,WAAOI,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,GAbE,CAAP,CAD0C,CAe1C;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAvBM;AAyBP,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,SAAOhB,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AAC/BK,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,WAAW,EAAE;AAFkB,GAAvB,CAAL,CAIFK,IAJE,CAIGG,GAAG,IAAI;AACT,QAAIA,GAAG,CAACE,EAAR,EAAY;AACR,aAAOF,GAAG,CAACD,IAAJ,EAAP;AACH;;AACD,WAAOI,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,GATE,CAAP;AAUH,CAXM;AAaP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC5B,SAAOjB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACjCK,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,WAAW,EAAE,SAFoB;AAGjCC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX,CAEL;;AAFK;AAHwB,GAAzB,CAAL,CASFI,IATE,CASGG,GAAG,IAAI;AACT,QAAIA,GAAG,CAACE,EAAR,EAAY;AACR,aAAOF,GAAG,CAACD,IAAJ,EAAP;AACH;;AACD,WAAOI,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,GAdE,CAAP;AAeH,CAhBM,C,CAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const BASE_URL = 'https://api.vitaliymont.students.nomoredomains.club';\n\n\nexport const register = (password, email) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        credentials: \"include\",\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then((response) => {\n            return response.json();\n        })\n        .then((res) => {\n            return res;\n        });\n\n};\n\nexport const authorize = (password, email) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        credentials: \"include\",\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        });\n    // .then(res => res.json())\n    // .then((data) => {\n    //\n    //     if (data.token) {\n    //         return data;\n    //     }\n    // });\n\n};\n\nexport const logout = () => {\n    return fetch(`${BASE_URL}/logout`, {\n        method: 'GET',\n        credentials: 'include',\n    })\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        });\n};\n\nexport const checkToken = () => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        credentials: \"include\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            // \"Authorization\": `Bearer ${token}`\n\n        }\n    })\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        });\n};\n\n// export const checkToken = () => {\n//     return fetch(`${BASE_URL}/users/me`, {\n//         method: 'GET',\n//         credentials: \"include\",\n//         headers: {\n//             \"Content-Type\": \"application/json\",\n//             // \"Authorization\": `Bearer ${token}`\n//\n//         }\n//     })\n//         .then(res => res.json())\n//         .then(data => data);\n// };\n"]},"metadata":{},"sourceType":"module"}