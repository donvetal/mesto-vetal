{"ast":null,"code":"export var BASE_URL='https://auth.nomoreparties.co';export var register=function register(password,email){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(response){return response.json();}).then(function(res){return res;});};export var authorize=function authorize(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(function(res){return res.json();}).then(function(data){if(data.token){return data;}});};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){return res.json();}).then(function(data){return data;});};","map":{"version":3,"sources":["/Users/vitaliidolzhenko/WebstormProjects/mesto-vetal/frontend/src/utils/auth.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","json","res","authorize","data","token","checkToken"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,QAAQ,CAAG,+BAAjB,CAGP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWC,KAAX,CAAqB,CACzC,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CAC/BK,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,QAAQ,CAARA,QAAD,CAAWC,KAAK,CAALA,KAAX,CAAf,CALyB,CAAvB,CAAL,CAOFO,IAPE,CAOG,SAACC,QAAD,CAAc,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACH,CATE,EAUFF,IAVE,CAUG,SAACG,GAAD,CAAS,CACX,MAAOA,CAAAA,GAAP,CACH,CAZE,CAAP,CAcH,CAfM,CAiBP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACZ,QAAD,CAAWC,KAAX,CAAqB,CAC1C,MAAOC,CAAAA,KAAK,WAAIJ,QAAJ,YAAuB,CAC/BK,MAAM,CAAE,MADuB,CAE/BC,OAAO,CAAE,CACL,eAAgB,kBADX,CAFsB,CAK/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,QAAQ,CAARA,QAAD,CAAWC,KAAK,CAALA,KAAX,CAAf,CALyB,CAAvB,CAAL,CAOFO,IAPE,CAOG,SAAAG,GAAG,QAAIA,CAAAA,GAAG,CAACD,IAAJ,EAAJ,EAPN,EAQFF,IARE,CAQG,SAACK,IAAD,CAAU,CAEZ,GAAIA,IAAI,CAACC,KAAT,CAAgB,CACZ,MAAOD,CAAAA,IAAP,CACH,CACJ,CAbE,CAAP,CAeH,CAhBM,CAmBP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACD,KAAD,CAAW,CACjC,MAAOZ,CAAAA,KAAK,WAAIJ,QAAJ,cAAyB,CACjCK,MAAM,CAAE,KADyB,CAEjCC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,iCAA2BU,KAA3B,CAFK,CAFwB,CAAzB,CAAL,CAQFN,IARE,CAQG,SAAAG,GAAG,QAAIA,CAAAA,GAAG,CAACD,IAAJ,EAAJ,EARN,EASFF,IATE,CASG,SAAAK,IAAI,QAAIA,CAAAA,IAAJ,EATP,CAAP,CAUH,CAXM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n\nexport const register = (password, email) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then((response) => {\n            return response.json();\n        })\n        .then((res) => {\n            return res;\n        });\n\n};\n\nexport const authorize = (password, email) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({password, email})\n    })\n        .then(res => res.json())\n        .then((data) => {\n\n            if (data.token) {\n                return data;\n            }\n        });\n\n};\n\n\nexport const checkToken = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n\n        }\n    })\n        .then(res => res.json())\n        .then(data => data);\n};\n"]},"metadata":{},"sourceType":"module"}