{"ast":null,"code":"var _jsxFileName = \"/Users/vitaliidolzhenko/WebstormProjects/mesto-vetal/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport fail from \"../images/info-tooltip-fail.svg\";\nimport successImg from \"../images/info-tooltip-success.svg\";\nimport * as auth from '../utils/auth.js'; // import {Cookies} from 'react-cookie'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [registered, setRegistered] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false); // const [isAuthChecking, setIsAuthChecking] = React.useState(true);\n\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [email, setEmail] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]); // Выход из системы\n\n  const onSignOut = () => {\n    auth.logout().then(res => {\n      if (res) {\n        setLoggedIn(false);\n      }\n    }).catch(err => console.log(`Error: ${err}`));\n  };\n\n  const handleRegister = (password, email) => {\n    auth.register(password, email).then(res => {\n      if (res.hasOwnProperty('error')) {\n        setRegistered(false);\n      } else {\n        setRegistered(true);\n        setEmail({\n          email: res.data.email\n        });\n      }\n\n      setIsInfoTooltipOpen(true);\n    }).catch(err => console.log(err));\n  }; // Успешное прохождение авторизации\n\n\n  const successfulAuth = useCallback(() => {\n    api.getUserInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(error => {\n      console.log(error);\n    });\n    api.getCardList().then(data => {\n      if (!data) return;\n      setCards(data);\n    }).catch(error => {\n      console.log(error);\n    });\n    setLoggedIn(true);\n    props.history.push('/');\n  }, [props.history]);\n\n  const onLogin = (password, email) => {\n    auth.authorize(password, email).then(data => {\n      if (data) {\n        setEmail({\n          email: email\n        });\n        successfulAuth();\n      } else {\n        setIsInfoTooltipOpen(true);\n      }\n    }).catch(err => {\n      setIsInfoTooltipOpen(true);\n      console.log(err);\n    });\n  }; // Проверка авторизации пользователя\n\n\n  useEffect(() => {\n    // setIsAuthChecking(true)\n    auth.checkAuth().then(res => {\n      if (res) {\n        successfulAuth();\n      }\n    }).catch(() => {\n      // setIsAuthChecking(false)\n      props.history.push('/');\n    }); // .finally(() => {\n    //     setIsAuthChecking(false)\n    // });\n  }, [props.history, successfulAuth]); // useEffect(() => {\n  //     if (!loggedIn) return;\n  //     api.getCardList()\n  //         .then(data => {\n  //             setCards(data);\n  //         })\n  //         .catch(error => {\n  //             console.log(error);\n  //         });\n  // }, [loggedIn]);\n  //\n  // useEffect(() => {\n  //     if (!loggedIn) return;\n  //     api.getUserInfo()\n  //         .then(data => {\n  //             setCurrentUser(data);\n  //         })\n  //         .catch(error => {\n  //             console.log(error);\n  //         });\n  // }, [loggedIn]);\n  // useEffect(() => {\n  //     if (loggedIn) {\n  //         auth.checkToken()\n  //             .then((res) => {\n  //                 if (res) {\n  //                     setEmail({email: res.data.email});\n  //                     setLoggedIn(true);\n  //                 }\n  //\n  //             })\n  //             .then(() => {\n  //                 props.history.push(\"/\");\n  //\n  //             })\n  //             .catch(error => {\n  //                 console.log(error);\n  //             });\n  //\n  //     }\n  // }, [props.history, loggedIn]);\n  // const onLogin = (password, email) => {\n  //     auth.authorize(password, email)\n  //         .then((data) => {\n  //             if (data && data.hasOwnProperty('token')) {\n  //                 // const cookies = new Cookies();\n  //                 // cookies.set('token', data.token);\n  //                 localStorage.setItem('token', data.token);\n  //                 setEmail({email: email});\n  //                 setLoggedIn(true);\n  //                 props.history.push(\"/\");\n  //             } else {\n  //                 setIsInfoTooltipOpen(true);\n  //             }\n  //         })\n  //         .catch(err => {\n  //             setIsInfoTooltipOpen(true);\n  //             console.log(err);\n  //         });\n  // };\n  // useEffect(() => {\n  //     // const cookies = new Cookies();\n  //     if (localStorage.getItem('token')) {\n  //         const jwt = localStorage.getItem('token');\n  //         // if (cookies.get('jwt')) {\n  //         //     const jwt = cookies.get('jwt');\n  //         // проверяем токен пользователя\n  //         auth.checkToken(jwt)\n  //             .then((res) => {\n  //                 if (res) {\n  //                     setEmail({email: res.data.email});\n  //                     setLoggedIn(true);\n  //                 }\n  //\n  //             })\n  //             .then(() => {\n  //                 props.history.push(\"/\");\n  //\n  //             })\n  //             .catch(error => {\n  //                 console.log(error);\n  //             });\n  //\n  //     }\n  // }, [props.history]);\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const onInfoTooltipClose = () => {\n    closeAllPopups();\n\n    if (registered) {\n      setTimeout(() => props.history.push(\"/signin\"), 1000);\n    }\n  };\n\n  const closeAllPopups = () => {\n    setIsInfoTooltipOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n    setIsImagePopupOpen(true);\n  };\n\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n  const handleUpdateUser = currentUser => {\n    api.setUserInfo(currentUser.name, currentUser.about).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleUpdateAvatar = avatar => {\n    api.setUserAvatar(avatar).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(_ => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleAddPlace(e, card) {\n    api.addNewCard(card).then(card => {\n      setCards([card, ...cards]);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          onSignOut: onSignOut,\n          userData: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            children: [/*#__PURE__*/_jsxDEV(InfoTooltip, {\n              isOpen: isInfoTooltipOpen,\n              onClose: closeAllPopups,\n              image: fail,\n              title: 'Что-то пошло не так! Попробуйте ещё раз.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: onLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            children: [/*#__PURE__*/_jsxDEV(InfoTooltip, {\n              isOpen: isInfoTooltipOpen,\n              onClose: onInfoTooltipClose,\n              image: registered ? successImg : fail,\n              title: registered ? 'Вы успешно зарегестрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              exact: true,\n              path: \"/\",\n              loggedIn: loggedIn,\n              component: Main,\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onEditAvatar: handleEditAvatarClick,\n              cards: cards,\n              handleCardClick: handleCardClick,\n              setCards: setCards,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this), loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/signin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onUpdateUser: handleUpdateUser,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onAddPlaceSubmit: handleAddPlace,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onUpdateAvatar: handleUpdateAvatar,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: \"delete-image\",\n          title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n          buttonName: \"\\u0414\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups,\n          isOpen: isImagePopupOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"BEXK3mQbOxhrwxp4KPiAvuFf2MQ=\");\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/vitaliidolzhenko/WebstormProjects/mesto-vetal/frontend/src/components/App.js"],"names":["React","useEffect","useCallback","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Redirect","Route","Switch","withRouter","Login","Register","InfoTooltip","ProtectedRoute","auth","App","props","loggedIn","setLoggedIn","useState","registered","setRegistered","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","email","setEmail","currentUser","setCurrentUser","cards","setCards","onSignOut","logout","then","res","catch","err","console","log","handleRegister","password","register","hasOwnProperty","data","successfulAuth","getUserInfo","error","getCardList","history","push","onLogin","authorize","checkAuth","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","onInfoTooltipClose","closeAllPopups","setTimeout","setIsImagePopupOpen","handleCardClick","card","setSelectedCard","selectedCard","isImagePopupOpen","handleUpdateUser","setUserInfo","name","about","handleUpdateAvatar","avatar","setUserAvatar","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","_","filter","handleAddPlace","e","addNewCard","fail","successImg"],"mappings":"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","sourcesContent":["import React, {useEffect, useCallback} from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport fail from '../images/info-tooltip-fail.svg';\nimport successImg from '../images/info-tooltip-success.svg';\nimport * as auth from '../utils/auth.js';\n\n// import {Cookies} from 'react-cookie'\n\n\nfunction App(props) {\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [registered, setRegistered] = React.useState(false);\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    // const [isAuthChecking, setIsAuthChecking] = React.useState(true);\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n    const [email, setEmail] = React.useState({});\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n\n    // Выход из системы\n    const onSignOut = () => {\n        auth.logout()\n            .then((res) => {\n                if (res) {\n                    setLoggedIn(false);\n                }\n            })\n            .catch((err) => console.log(`Error: ${err}`));\n    };\n\n\n\n    const handleRegister = (password, email) => {\n\n        auth.register(password, email)\n            .then((res) => {\n                if (res.hasOwnProperty('error')) {\n                    setRegistered(false);\n                } else {\n                    setRegistered(true);\n                    setEmail({email: res.data.email});\n                }\n                setIsInfoTooltipOpen(true);\n            })\n            .catch((err) => console.log(err));\n    };\n\n    // Успешное прохождение авторизации\n    const successfulAuth = useCallback(() => {\n        api.getUserInfo()\n            .then(data => {\n                setCurrentUser(data);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n        api.getCardList()\n            .then(data => {\n                if(!data) return;\n                setCards(data);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n        setLoggedIn(true);\n        props.history.push('/');\n    }, [props.history]);\n\n    const onLogin = (password, email) => {\n        auth.authorize(password, email)\n            .then((data) => {\n                if (data) {\n                    setEmail({email: email});\n                    successfulAuth();\n                } else {\n                    setIsInfoTooltipOpen(true);\n                }\n            })\n            .catch(err => {\n                setIsInfoTooltipOpen(true);\n                console.log(err);\n            });\n    };\n\n\n\n    // Проверка авторизации пользователя\n    useEffect(() => {\n        // setIsAuthChecking(true)\n\n        auth.checkAuth()\n            .then(res => {\n                if (res) {\n                    successfulAuth();\n                }\n            })\n            .catch(() => {\n                // setIsAuthChecking(false)\n                props.history.push('/')\n            })\n            // .finally(() => {\n            //     setIsAuthChecking(false)\n            // });\n\n    }, [props.history, successfulAuth]);\n\n\n\n    // useEffect(() => {\n    //     if (!loggedIn) return;\n    //     api.getCardList()\n    //         .then(data => {\n    //             setCards(data);\n    //         })\n    //         .catch(error => {\n    //             console.log(error);\n    //         });\n    // }, [loggedIn]);\n    //\n    // useEffect(() => {\n    //     if (!loggedIn) return;\n    //     api.getUserInfo()\n    //         .then(data => {\n    //             setCurrentUser(data);\n    //         })\n    //         .catch(error => {\n    //             console.log(error);\n    //         });\n    // }, [loggedIn]);\n\n\n\n    // useEffect(() => {\n    //     if (loggedIn) {\n    //         auth.checkToken()\n    //             .then((res) => {\n    //                 if (res) {\n    //                     setEmail({email: res.data.email});\n    //                     setLoggedIn(true);\n    //                 }\n    //\n    //             })\n    //             .then(() => {\n    //                 props.history.push(\"/\");\n    //\n    //             })\n    //             .catch(error => {\n    //                 console.log(error);\n    //             });\n    //\n    //     }\n    // }, [props.history, loggedIn]);\n\n\n    // const onLogin = (password, email) => {\n    //     auth.authorize(password, email)\n    //         .then((data) => {\n    //             if (data && data.hasOwnProperty('token')) {\n    //                 // const cookies = new Cookies();\n    //                 // cookies.set('token', data.token);\n    //                 localStorage.setItem('token', data.token);\n    //                 setEmail({email: email});\n    //                 setLoggedIn(true);\n    //                 props.history.push(\"/\");\n    //             } else {\n    //                 setIsInfoTooltipOpen(true);\n    //             }\n    //         })\n    //         .catch(err => {\n    //             setIsInfoTooltipOpen(true);\n    //             console.log(err);\n    //         });\n    // };\n\n\n    // useEffect(() => {\n    //     // const cookies = new Cookies();\n    //     if (localStorage.getItem('token')) {\n    //         const jwt = localStorage.getItem('token');\n    //         // if (cookies.get('jwt')) {\n    //         //     const jwt = cookies.get('jwt');\n    //         // проверяем токен пользователя\n    //         auth.checkToken(jwt)\n    //             .then((res) => {\n    //                 if (res) {\n    //                     setEmail({email: res.data.email});\n    //                     setLoggedIn(true);\n    //                 }\n    //\n    //             })\n    //             .then(() => {\n    //                 props.history.push(\"/\");\n    //\n    //             })\n    //             .catch(error => {\n    //                 console.log(error);\n    //             });\n    //\n    //     }\n    // }, [props.history]);\n\n\n    const handleEditProfileClick = () => {\n        setIsEditProfilePopupOpen(true);\n    };\n    const handleAddPlaceClick = () => {\n        setIsAddPlacePopupOpen(true);\n    };\n\n    const handleEditAvatarClick = () => {\n        setIsEditAvatarPopupOpen(true);\n    };\n\n\n    const onInfoTooltipClose = () => {\n        closeAllPopups();\n        if (registered) {\n            setTimeout(() => props.history.push(\"/signin\"), 1000);\n        }\n\n    };\n\n    const closeAllPopups = () => {\n        setIsInfoTooltipOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsImagePopupOpen(false);\n    };\n\n    const handleCardClick = (card) => {\n        setSelectedCard(card);\n        setIsImagePopupOpen(true);\n    };\n\n\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n    const handleUpdateUser = (currentUser) => {\n        api.setUserInfo(currentUser.name, currentUser.about)\n            .then(data => {\n                setCurrentUser(data);\n                closeAllPopups();\n\n            })\n            .catch(error => {\n                console.log(error);\n            });\n\n    };\n\n    const handleUpdateAvatar = (avatar) => {\n        api.setUserAvatar(avatar)\n            .then(data => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch(error => {\n                console.log(error);\n            });\n\n    };\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(_ => {\n                setCards((state) => state.filter((c) => c._id !== card._id));\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    function handleAddPlace(e, card) {\n        api.addNewCard(card)\n            .then(card => {\n                setCards([card, ...cards]);\n                closeAllPopups();\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n    return (\n        <div className=\"App\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <div className=\"page\">\n                    <Header onSignOut={onSignOut} userData={email}/>\n                    <Switch>\n                        <Route path=\"/signin\">\n\n                            <InfoTooltip\n                                isOpen={isInfoTooltipOpen}\n                                onClose={closeAllPopups}\n                                image={fail}\n                                title={'Что-то пошло не так! Попробуйте ещё раз.'}\n\n                            />\n                            <Login handleLogin={onLogin}/>\n                        </Route>\n                        <Route path=\"/signup\">\n\n                            <InfoTooltip\n                                isOpen={isInfoTooltipOpen}\n                                onClose={onInfoTooltipClose}\n                                image={registered ? successImg : fail}\n                                title={registered ? 'Вы успешно зарегестрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}\n\n                            />\n                            <Register\n                                onRegister={handleRegister}/>\n\n                        </Route>\n\n                        <Route>\n\n\n                            <ProtectedRoute exact path=\"/\"\n                                            loggedIn={loggedIn}\n                                            component={Main}\n                                            onEditProfile={handleEditProfileClick}\n                                            onAddPlace={handleAddPlaceClick}\n                                            onEditAvatar={handleEditAvatarClick}\n                                            cards={cards}\n                                            handleCardClick={handleCardClick}\n                                            setCards={setCards}\n                                            onCardLike={handleCardLike}\n                                            onCardDelete={handleCardDelete}\n\n                            />\n                            {loggedIn ? (<Redirect to=\"/\"/>) : (<Redirect to=\"/signin\"/>)}\n                        </Route>\n\n\n                    </Switch>\n                    <Footer/>\n\n                    <EditProfilePopup isOpen={isEditProfilePopupOpen}\n                                      onUpdateUser={handleUpdateUser}\n                                      onClose={closeAllPopups}/>\n\n                    <AddPlacePopup isOpen={isAddPlacePopupOpen}\n                                   onAddPlaceSubmit={handleAddPlace}\n                                   onClose={closeAllPopups}/>\n\n                    <EditAvatarPopup isOpen={isEditAvatarPopupOpen}\n                                     onUpdateAvatar={handleUpdateAvatar}\n                                     onClose={closeAllPopups}/>\n\n                    <PopupWithForm name=\"delete-image\" title=\"Вы уверены?\" buttonName=\"Да\"/>\n\n                    <ImagePopup\n                        card={selectedCard}\n                        onClose={closeAllPopups}\n                        isOpen={isImagePopupOpen}\n                    />\n                </div>\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\n\nexport default withRouter(App);\n\n"]},"metadata":{},"sourceType":"module"}