{"ast":null,"code":"export class Api {\n  constructor(config) {\n    this.getCardList = () => this._fetch('GET', '/cards');\n\n    this.getUserInfo = () => this._fetch('GET', '/users/me');\n\n    this.deleteLike = id => this._fetch('DELETE', '/cards/likes/' + id);\n\n    this.putLike = id => this._fetch('PUT', '/cards/likes/' + id);\n\n    this.changeLikeCardStatus = (id, isLiked) => isLiked ? this.putLike(id) : this.deleteLike(id);\n\n    this.deleteCard = id => this._fetch('DELETE', '/cards/' + id);\n\n    this.setUserInfo = (name, about) => this._fetch('PATCH', '/users/me', {\n      name,\n      about\n    });\n\n    this.setUserAvatar = link => this._fetch('PATCH', '/users/me/avatar', {\n      'avatar': link\n    });\n\n    this.addNewCard = body => this._fetch('POST', '/cards', body);\n\n    this.url = config.url;\n    this.headers = config.headers;\n    this.credentials = config.credentials;\n  }\n\n  _fetch(method, path, body) {\n    let options = {\n      method,\n      credentials: this.credentials,\n      headers: this.headers\n    };\n\n    if ((method === 'PATCH' || method === 'POST') && body) {\n      options = { ...options,\n        body: JSON.stringify(body)\n      };\n    } // return fetch(this.url + 'cohort-25' + path, options)\n\n\n    return fetch(this.url + path, options).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n}\nconst api = new Api({\n  // url: 'https://mesto.nomoreparties.co/v1/',\n  // headers: {\n  //     authorization: '6c5c2ad0-ab62-45ad-b6d9-d0d31ad5dd6b',\n  //     'Content-type': 'application/json'\n  // }\n  url: 'https://api.vitaliymont.students.nomoredomains.club',\n  credentials: 'include',\n  headers: {\n    'Content-type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/vitaliidolzhenko/WebstormProjects/mesto-vetal/frontend/src/utils/api.js"],"names":["Api","constructor","config","getCardList","_fetch","getUserInfo","deleteLike","id","putLike","changeLikeCardStatus","isLiked","deleteCard","setUserInfo","name","about","setUserAvatar","link","addNewCard","body","url","headers","credentials","method","path","options","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","api"],"mappings":"AAAA,OAAO,MAAMA,GAAN,CAAU;AACbC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAAA,SAOpBC,WAPoB,GAON,MAAM,KAAKC,MAAL,CAAY,KAAZ,EAAmB,QAAnB,CAPA;;AAAA,SASpBC,WAToB,GASN,MAAM,KAAKD,MAAL,CAAY,KAAZ,EAAmB,WAAnB,CATA;;AAAA,SAWpBE,UAXoB,GAWNC,EAAD,IAAQ,KAAKH,MAAL,CAAY,QAAZ,EAAsB,kBAAkBG,EAAxC,CAXD;;AAAA,SAapBC,OAboB,GAaTD,EAAD,IAAQ,KAAKH,MAAL,CAAY,KAAZ,EAAmB,kBAAkBG,EAArC,CAbE;;AAAA,SAepBE,oBAfoB,GAeG,CAACF,EAAD,EAAKG,OAAL,KAAiBA,OAAO,GAAG,KAAKF,OAAL,CAAaD,EAAb,CAAH,GAAsB,KAAKD,UAAL,CAAgBC,EAAhB,CAfjD;;AAAA,SAiBpBI,UAjBoB,GAiBNJ,EAAD,IAAQ,KAAKH,MAAL,CAAY,QAAZ,EAAsB,YAAYG,EAAlC,CAjBD;;AAAA,SAmBpBK,WAnBoB,GAmBN,CAACC,IAAD,EAAOC,KAAP,KAAiB,KAAKV,MAAL,CAAY,OAAZ,EAAqB,WAArB,EAAkC;AAACS,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAlC,CAnBX;;AAAA,SAqBpBC,aArBoB,GAqBHC,IAAD,IAAU,KAAKZ,MAAL,CAAY,OAAZ,EAAqB,kBAArB,EAAyC;AAAC,gBAAUY;AAAX,KAAzC,CArBN;;AAAA,SAuBpBC,UAvBoB,GAuBNC,IAAD,IAAU,KAAKd,MAAL,CAAY,MAAZ,EAAoB,QAApB,EAA8Bc,IAA9B,CAvBH;;AAChB,SAAKC,GAAL,GAAWjB,MAAM,CAACiB,GAAlB;AACA,SAAKC,OAAL,GAAelB,MAAM,CAACkB,OAAtB;AACA,SAAKC,WAAL,GAAkBnB,MAAM,CAACmB,WAAzB;AACH;;AAsBDjB,EAAAA,MAAM,CAACkB,MAAD,EAASC,IAAT,EAAeL,IAAf,EAAqB;AACvB,QAAIM,OAAO,GAAG;AACVF,MAAAA,MADU;AAEVD,MAAAA,WAAW,EAAE,KAAKA,WAFR;AAGVD,MAAAA,OAAO,EAAE,KAAKA;AAHJ,KAAd;;AAKA,QAAI,CAACE,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,MAAlC,KAA6CJ,IAAjD,EAAuD;AACnDM,MAAAA,OAAO,GAAG,EACN,GAAGA,OADG;AAENN,QAAAA,IAAI,EAAEO,IAAI,CAACC,SAAL,CAAeR,IAAf;AAFA,OAAV;AAIH,KAXsB,CAYvB;;;AACA,WAAOS,KAAK,CAAC,KAAKR,GAAL,GAAWI,IAAZ,EAAkBC,OAAlB,CAAL,CACFI,IADE,CACGC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACH;;AACD,aAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;AACH,KANE,CAAP;AAOH;;AA/CY;AAkDjB,MAAMC,GAAG,GAAG,IAAInC,GAAJ,CAAQ;AAChB;AACA;AACA;AACA;AACA;AACAmB,EAAAA,GAAG,EAAE,qDANW;AAOhBE,EAAAA,WAAW,EAAE,SAPG;AAQhBD,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AARO,CAAR,CAAZ;AAaA,eAAee,GAAf","sourcesContent":["export class Api {\n    constructor(config) {\n        this.url = config.url;\n        this.headers = config.headers;\n        this.credentials =config.credentials;\n    }\n\n\n    getCardList = () => this._fetch('GET', '/cards');\n\n    getUserInfo = () => this._fetch('GET', '/users/me');\n\n    deleteLike = (id) => this._fetch('DELETE', '/cards/likes/' + id);\n\n    putLike = (id) => this._fetch('PUT', '/cards/likes/' + id);\n\n    changeLikeCardStatus = (id, isLiked) => isLiked ? this.putLike(id) : this.deleteLike(id);\n\n    deleteCard = (id) => this._fetch('DELETE', '/cards/' + id);\n\n    setUserInfo = (name, about) => this._fetch('PATCH', '/users/me', {name, about});\n\n    setUserAvatar = (link) => this._fetch('PATCH', '/users/me/avatar', {'avatar': link});\n\n    addNewCard = (body) => this._fetch('POST', '/cards', body);\n\n\n    _fetch(method, path, body) {\n        let options = {\n            method,\n            credentials: this.credentials,\n            headers: this.headers,\n        };\n        if ((method === 'PATCH' || method === 'POST') && body) {\n            options = {\n                ...options,\n                body: JSON.stringify(body)\n            };\n        }\n        // return fetch(this.url + 'cohort-25' + path, options)\n        return fetch(this.url + path, options)\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                }\n                return Promise.reject(`Ошибка: ${res.status}`);\n            });\n    }\n}\n\nconst api = new Api({\n    // url: 'https://mesto.nomoreparties.co/v1/',\n    // headers: {\n    //     authorization: '6c5c2ad0-ab62-45ad-b6d9-d0d31ad5dd6b',\n    //     'Content-type': 'application/json'\n    // }\n    url: 'https://api.vitaliymont.students.nomoredomains.club',\n    credentials: 'include',\n    headers: {\n        'Content-type': 'application/json',\n    }\n\n});\nexport default api;\n\n\n"]},"metadata":{},"sourceType":"module"}